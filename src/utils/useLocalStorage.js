import { useState, useEffect } from "react";

// üîç –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ localStorage –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
function getStorageValue(key, defaultValue) {
  try {
    const saved = localStorage.getItem(key); // Get item from localStorage
    if (saved === null) return defaultValue; // Return default if nothing is saved
    return JSON.parse(saved); // Parse if value exists
  } catch (error) {
    console.error(`Error parsing localStorage key "${key}":`, error);
    return defaultValue; // Return default if parsing fails
  }
}

// üåü –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å localStorage
export const useLocalStorage = (key, defaultValue) => {
  // üèóÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ–º –∏–∑ localStorage –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º
  const [value, setValue] = useState(() => getStorageValue(key, defaultValue));

  // üõ†Ô∏è useEffect –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è localStorage –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ value –∏–ª–∏ key
  useEffect(() => {
    localStorage.setItem(key, JSON.stringify(value)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ localStorage
  }, [key, value]); // üîÑ –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ key –∏–ª–∏ value

  return [value, setValue]; // üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏ —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
};
